apiVersion: apps/v1
kind: Deployment
metadata:
  name: mainui
spec:
  selector:
    matchLabels:
      app: mainui
  template:
    metadata:
      labels:
        app: mainui
    spec:
      serviceAccountName: mainui
      containers:
      - image: ${registryprefix}/${project}/${project}/adminapp:v0.1.0
        imagePullPolicy: IfNotPresent
        name: mainui
        ports:
        - containerPort: 3000
        env:
        - name: PORT
          value: "3000" 
        - name: NAMESPACE 
          value: ${namespace}
        - name: WRITE_TOKEN_NAME
          value: streamstate-webhook-token
        - name: READ_TOKEN_NAME
          value: streamstate-restapi-token
---
apiVersion: v1
kind: Service
metadata:
  name: mainui
spec:
  ports:
  - name: http
    port: 80
    targetPort: 3000
  type: ClusterIP 
  selector:
    app: mainui

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mainui

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app: mainui
  name: secretaccess
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete

---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: secretaccess
subjects:
- kind: ServiceAccount
  name: mainui
  apiGroup: ""
roleRef:
  kind: Role
  name: secretaccess
  apiGroup: ""