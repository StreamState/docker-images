name: push_docker
on:
  push:
    # Sequence of patterns matched against refs/heads
    branches:    
      # Push events on main branch
      - master
env:
  PROJECT_NAME: streamstatetest
  REGISTRY: us-central1-docker.pkg.dev
jobs:
  run_pytest:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
    - name: Test with pytest
      run: |
        pip install pytest
        cd api
        pytest .
        cd ..
  run_docker_build:
    needs: run_pytest
    runs-on: ubuntu-latest
    steps:
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v5.5
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          registry: ${{ env.REGISTRY }}
          username: _json_key_base64
          password: ${{ secrets.GCP_SA_KEY }}

      - name: Build and push sparkpy
        id: docker_build_sparkpy
        uses: docker/build-push-action@v2
        env:
          DOCKER_PREFIX: ${{ env.REGISTRY }}/${{ env.PROJECT_NAME }}/${{ env.PROJECT_NAME }}
          CONTAINER: pysparkbase
        with:
          context: ./docker
          file: ./docker/sparkpy.Dockerfile
          push: true
          tags: ${{ env.DOCKER_PREFIX }}/${{ env.CONTAINER }}:latest,${{ env.DOCKER_PREFIX }}/${{ env.CONTAINER }}:${{ steps.tag_version.outputs.new_tag }}
      - name: Build and push sparktest
        id: docker_build_sparktest
        uses: docker/build-push-action@v2
        env:
          DOCKER_PREFIX: ${{ env.REGISTRY }}/${{ env.PROJECT_NAME }}/${{ env.PROJECT_NAME }}
          CONTAINER: pysparktest
        with:
          context: ./docker
          file: ./docker/sparkpy.Dockerfile
          push: true
          tags: ${{ env.DOCKER_PREFIX }}/${{ env.CONTAINER }}:latest,${{ env.DOCKER_PREFIX }}/${{ env.CONTAINER }}:${{ steps.tag_version.outputs.new_tag }}
      - name: Build and push firebase
        id: docker_build_firebase
        uses: docker/build-push-action@v2
        env:
          DOCKER_PREFIX: ${{ env.REGISTRY }}/${{ env.PROJECT_NAME }}/${{ env.PROJECT_NAME }}
          CONTAINER: firestoresetup
        with:
          context: ./firebaseinstall
          push: true
          tags: ${{ env.DOCKER_PREFIX }}/${{ env.CONTAINER }}:latest,${{ env.DOCKER_PREFIX }}/${{ env.CONTAINER }}:${{ steps.tag_version.outputs.new_tag }}
      
      - name: Build and push adminapp
        id: docker_build_adminapp
        uses: docker/build-push-action@v2
        env:
          DOCKER_PREFIX: ${{ env.REGISTRY }}/${{ env.PROJECT_NAME }}/${{ env.PROJECT_NAME }}
          CONTAINER: adminapp
        with:
          context: ./adminapp
          push: true
          tags: ${{ env.DOCKER_PREFIX }}/${{ env.CONTAINER }}:latest,${{ env.DOCKER_PREFIX }}/${{ env.CONTAINER }}:${{ steps.tag_version.outputs.new_tag }}
      
      - name: Build and push restapi
        id: docker_build_restapi
        uses: docker/build-push-action@v2
        env:
          DOCKER_PREFIX: ${{ env.REGISTRY }}/${{ env.PROJECT_NAME }}/${{ env.PROJECT_NAME }}
          CONTAINER: restapi
        with:
          context: ./api
          push: true
          tags: ${{ env.DOCKER_PREFIX }}/${{ env.CONTAINER }}:latest,${{ env.DOCKER_PREFIX }}/${{ env.CONTAINER }}:${{ steps.tag_version.outputs.new_tag }}
      
      - name: Build and push sparkhistory
        id: docker_build_sparkhistory
        uses: docker/build-push-action@v2
        env:
          DOCKER_PREFIX: ${{ env.REGISTRY }}/${{ env.PROJECT_NAME }}/${{ env.PROJECT_NAME }}
          CONTAINER: sparkhistory
        with:
          context: ./spark-history
          push: true
          tags: ${{ env.DOCKER_PREFIX }}/${{ env.CONTAINER }}:latest,${{ env.DOCKER_PREFIX }}/${{ env.CONTAINER }}:${{ steps.tag_version.outputs.new_tag }}