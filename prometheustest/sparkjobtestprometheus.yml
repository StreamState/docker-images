apiVersion: "sparkoperator.k8s.io/v1beta2"
kind: SparkApplication
metadata:
  name: devfromfile
spec:
  sparkConf:
    spark.jars.packages: "org.apache.spark:spark-sql-kafka-0-10_2.12:3.0.0"
    spark.jars.repositories: "https://packages.confluent.io/maven"
    spark.jars.ivy: "/tmp/ivy"
  type: Scala
  mode: cluster
  image: streamstate:latest
  imagePullPolicy: Never
  mainClass: sparkwrappers.DevFromFile
  mainApplicationFile: "local:///opt/spark/work-dir/streamstate.jar"
  sparkVersion: "3.0.1"
  arguments:
    - mytestapp
    - ./tmp_file
    - 2d
    - /tmp/checkpoint 
  restartPolicy:
    type: Never
  volumes:
    - name: "test-volume"
      hostPath:
        path: "/tmp" # todo, point to object storage
        type: Directory
  driver:
    coreRequest: 200m
    memory: "512m"
    labels:
      version: 3.0.1
    serviceAccount: spark
    volumeMounts:
      - name: "test-volume"
        mountPath: "/tmp" # todo, point to object storage
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "8090"
  executor:
    cores: 1
    instances: 1
    memory: "512m"
    labels:
      version: 3.0.1
    volumeMounts:
      - name: "test-volume"
        mountPath: "/tmp" # todo, point to object storage
  monitoring: 
    exposeDriverMetrics: true
    exposeExecutorMetrics: true
    metricsPropertiesFile: /etc/metrics/conf/metrics.properties
    prometheus:
      jmxExporterJar: "/prometheus/jmx_prometheus_javaagent-0.11.0.jar"
      configFile: /etc/metrics/conf/prometheus.yaml
      port: 8090